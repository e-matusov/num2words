# -*- coding: utf-8 -*-

from __future__ import unicode_literals

from .lang_EU import Num2Word_EU


class Num2Word_EL(Num2Word_EU):
    def set_high_numwords(self, high):
        for n, word in self.high_numwords:
            self.cards[10**n] = word

    def setup(self):
        self.low_numwords = [
        	
        	"ενενήντα εννέα",
		"ενενήντα οκτώ",
		"ενενήντα επτά",
		"ενενήντα έξι",
		"ενενήντα πέντε",
		"ενενήντα τέσσερα ",
		"ενενήντα τρία",
		"ενενήντα δύο",
		"ενενήντα ένα",
		"ενενήντα",
		
		"ογδόντα εννέα",
		"ογδόντα οκτώ",
		"ογδόντα επτά",
		"ογδόντα έξι",
		"ογδόντα πέντε",
		"ογδόντα τέσσερα ",
		"ογδόντα τρία",
		"ογδόντα δύο",
		"ογδόντα ένα",
		"ογδόντα",
		
		"εβδομήντα εννέα",
		"εβδομήντα οκτώ",
		"εβδομήντα επτά",
		"εβδομήντα έξι",
		"εβδομήντα πέντε",
		"εβδομήντα τέσσερα ",
		"εβδομήντα τρία",
		"εβδομήντα δύο",
		"εβδομήντα ένα",
		"εβδομήντα",
        	
        	"εξήντα εννέα",
		"εξήντα οκτώ",
		"εξήντα επτά",
		"εξήντα έξι",
		"εξήντα πέντε",
		"εξήντα τέσσερα ",
		"εξήντα τρία",
		"εξήντα δύο",
		"εξήντα ένα",
		"εξήντα",
        	
        	"πενήντα εννέα",
		"πενήντα οκτώ",
		"πενήντα επτά",
		"πενήντα έξι",
		"πενήντα πέντε",
		"πενήντα τέσσερα ",
		"πενήντα τρία",
		"πενήντα δύο",
		"πενήντα ένα",
		"πενήντα",
        
                "σαράντα εννέα",
		"σαράντα οκτώ",
		"σαράντα επτά",
		"σαράντα έξι",
		"σαράντα πέντε",
		"σαράντα τέσσερα ",
		"σαράντα τρία",
		"σαράντα δύο",
		"σαράντα ένα",
		"σαράντα",
		
        	"τριάντα εννέα",
		"τριάντα οκτώ",
		"τριάντα επτά",
		"τριάντα έξι",
		"τριάντα πέντε",
		"τριάντα τέσσερα ",
		"τριάντα τρία",
		"τριάντα δύο",
		"τριάντα ένα",
		"τριάντα",
        
		"είκοσι εννέα",
		"είκοσι οκτώ",
		"είκοσι επτά",
		"είκοσι έξι",
		"είκοσι πέντε",
		"είκοσι τέσσερα ",
		"είκοσι τρία",
		"είκοσι δύο",
		"είκοσι ένα",
		"είκοσι",
		
		"δεκαεννέα",
		"δεκαοκτώ",
		"δεκαεπτά",
		"δεκαέξι",
		"δεκαπέντε",
		"δεκατέσσερα",
		"δεκατρία",
		"δώδεκα",
		"έντεκα",
		"δέκα",
		
		"εννέα",
		"οκτώ",
		"επτά",
		"έξι",
		"πέντε",
		"τέσσερα ",
		"τρία",
		"δύο",
		"ένα",
		"μηδέν"
	]

        self.mid_numwords = [(900, "εννιακόσια "), (800, "οκτακόσια"), (700, "επτακόσια"), (600, "εξακόσια"), (500, "πεντακόσια"), (400, "τετρακόσια"), (300, "τριακόσια "), (200, "διακόσια"), (100, "εκατό") ]

        self.high_numwords = [(12, "τρισεκατομμύριο"), (9,"δισεκατομμύριο"), (6, "εκατομμύριο"), (3, "χίλια")]

        self.pointword = "κόμμα"

        self.modifiers = [
        
        ]

    def merge(self, lpair, rpair):
        ltext, lnum = lpair
        rtext, rnum = rpair
        if lnum == 1 and rnum < 100:
            return (rtext, rnum)
        elif 100 > lnum > rnum:
            return ("%s-%s" % (ltext, rtext), lnum + rnum)
        elif lnum >= 100 > rnum:
            return ("%s %s" % (ltext, rtext), lnum + rnum)
        elif rnum > lnum:
            return ("%s %s" % (ltext, rtext), lnum * rnum)
        return ("%s %s" % (ltext, rtext), lnum + rnum)

    def to_ordinal_num(self, value):
        self.verify_ordinal(value)
        return "%s%s" % (value, self.to_ordinal(value))

    def to_ordinal(self, value):
        self.verify_ordinal(value)
        outwords = self.to_cardinal(value)
        if outwords[-1] in self.modifiers:
            outwords = outwords
        ordinal_num = outwords + "dik"
        return ordinal_num
